{"version":3,"file":"icon-svg.js","sources":["../../../../../../modules/contrib/neo_icon/src/js/icon-svg.ts"],"sourcesContent":["/**\n * @file\n * @file!\n *\n * @copyright Copyright (c) 2016 IcoMoon.io\n * @license Licensed under MIT license\n *            See https://github.com/Keyamoon/svgxuse\n * @version 1.1.23\n */\n\n/* eslint-disable */\n\n/*jslint browser: true */\n/*global XDomainRequest, MutationObserver, window */\n(function () {\n  'use strict';\n  if (window && window.addEventListener) {\n    var cache = Object.create(null); // Holds xhr objects to prevent multiple requests.\n    var checkUseElems:Function;\n    var tid:NodeJS.Timeout|undefined|number; // Timeout id.\n    var debouncedCheck = function () {\n      clearTimeout(tid);\n      tid = setTimeout(checkUseElems, 100);\n    };\n    var unobserveChanges = function () {\n      return;\n    };\n    var observeChanges = function () {\n      var observer:MutationObserver;\n      window.addEventListener('resize', debouncedCheck, false);\n      window.addEventListener('orientationchange', debouncedCheck, false);\n      if (window.MutationObserver) {\n        observer = new MutationObserver(debouncedCheck);\n        observer.observe(document.documentElement, {\n          childList: true,\n          subtree: true,\n          attributes: true\n        });\n        unobserveChanges = function () {\n          try {\n            observer.disconnect();\n            window.removeEventListener('resize', debouncedCheck, false);\n            window.removeEventListener('orientationchange', debouncedCheck, false);\n          }\n          catch (ignore) {\n\n          }\n        };\n      }\n      else {\n        document.documentElement.addEventListener('DOMSubtreeModified', debouncedCheck, false);\n        unobserveChanges = function () {\n          document.documentElement.removeEventListener('DOMSubtreeModified', debouncedCheck, false);\n          window.removeEventListener('resize', debouncedCheck, false);\n          window.removeEventListener('orientationchange', debouncedCheck, false);\n        };\n      }\n    };\n    var createRequest = function (url:string) {\n      // In IE 9, cross origin requests can only be sent using XDomainRequest.\n      // XDomainRequest would fail if CORS headers are not set.\n      // Therefore, XDomainRequest should only be used with cross origin requests.\n      function getOrigin(loc:any) {\n        var a;\n        if (loc.protocol !== undefined) {\n          a = loc;\n        }\n        else {\n          a = document.createElement('a');\n          a.href = loc;\n        }\n        return a.protocol.replace(/:/g, '') + a.host;\n      }\n      var Request;\n      var origin;\n      var origin2;\n      if (window.XMLHttpRequest) {\n        Request = new XMLHttpRequest();\n        origin = getOrigin(location);\n        origin2 = getOrigin(url);\n        if (Request.withCredentials === undefined && origin2 !== '' && origin2 !== origin) {\n          // @ts-ignore\n          Request = XDomainRequest || undefined;\n        }\n        else {\n          Request = XMLHttpRequest;\n        }\n      }\n      return Request;\n    };\n    var xlinkNS = 'http://www.w3.org/1999/xlink';\n    checkUseElems = function () {\n      var base;\n      var bcr:DOMRect|boolean;\n      var fallback = ''; // Optional fallback URL in case no base path to SVG file was given and no symbol definition was found.\n      var hash;\n      var href;\n      var i;\n      var inProgressCount = 0;\n      var isHidden;\n      var Request;\n      var url;\n      var uses;\n      var xhr;\n\n      function observeIfDone() {\n        // If done with making changes, start watching for chagnes in DOM again.\n        inProgressCount -= 1;\n        if (inProgressCount === 0) { // If all xhrs were resolved\n          unobserveChanges(); // make sure to remove old handlers\n          observeChanges(); // watch for changes to DOM.\n        }\n      }\n\n      function attrUpdateFunc(spec:any) {\n        return function () {\n          if (cache[spec.base] !== true) {\n            spec.useEl.setAttributeNS(xlinkNS, 'xlink:href', '#' + spec.hash);\n          }\n        };\n      }\n\n      function onloadFunc(xhr:any) {\n        return function () {\n          var body = document.body;\n          var x = document.createElement('x');\n          var svg;\n          xhr.onload = null;\n          x.innerHTML = xhr.responseText;\n          svg = x.getElementsByTagName('svg')[0];\n          if (svg) {\n            svg.setAttribute('aria-hidden', 'true');\n            svg.style.position = 'absolute';\n            svg.style.width = '0';\n            svg.style.height = '0';\n            svg.style.overflow = 'hidden';\n            body.insertBefore(svg, body.firstChild);\n          }\n          observeIfDone();\n        };\n      }\n\n      function onErrorTimeout(xhr:any) {\n        return function () {\n          xhr.onerror = null;\n          xhr.ontimeout = null;\n          observeIfDone();\n        };\n      }\n      unobserveChanges(); // Stop watching for changes to DOM\n      // find all use elements.\n      uses = document.getElementsByTagName('use');\n      for (i = 0; i < uses.length; i += 1) {\n        try {\n          bcr = uses[i].getBoundingClientRect();\n        }\n        catch (ignore) {\n          // Failed to get bounding rectangle of the use element.\n          bcr = false;\n        }\n        href = uses[i].getAttributeNS(xlinkNS, 'href');\n        if (href && href.split) {\n          url = href.split('#');\n        }\n        else {\n          url = [\"\", \"\"];\n        }\n        base = url[0];\n        hash = url[1];\n        isHidden = bcr && bcr.left === 0 && bcr.right === 0 && bcr.top === 0 && bcr.bottom === 0;\n        if (bcr && bcr.width === 0 && bcr.height === 0 && !isHidden) {\n          // The use element is empty\n          // if there is a reference to an external SVG, try to fetch it\n          // use the optional fallback URL if there is no reference to an external SVG.\n          if (fallback && !base.length && hash && !document.getElementById(hash)) {\n            base = fallback;\n          }\n          if (base.length) {\n            // Schedule updating xlink:href.\n            xhr = cache[base];\n            if (xhr !== true) {\n              // True signifies that prepending the SVG was not required.\n              setTimeout(attrUpdateFunc({\n                useEl: uses[i],\n                base: base,\n                hash: hash\n              }), 0);\n            }\n            if (xhr === undefined) {\n              Request = createRequest(base);\n              if (Request !== undefined) {\n                xhr = new Request();\n                cache[base] = xhr;\n                xhr.onload = onloadFunc(xhr);\n                xhr.onerror = onErrorTimeout(xhr);\n                xhr.ontimeout = onErrorTimeout(xhr);\n                xhr.open('GET', base);\n                xhr.send();\n                inProgressCount += 1;\n              }\n            }\n          }\n        }\n        else {\n          if (!isHidden) {\n            if (cache[base] === undefined) {\n              // Remember this URL if the use element was not empty and no request was sent.\n              cache[base] = true;\n            }\n            else if (cache[base].onload) {\n              // If it turns out that prepending the SVG is not necessary,\n              // abort the in-progress xhr.\n              cache[base].abort();\n              delete cache[base].onload;\n              cache[base] = true;\n            }\n          }\n          else if (base.length && cache[base]) {\n            attrUpdateFunc({\n              useEl: uses[i],\n              base: base,\n              hash: hash\n            })();\n          }\n        }\n      }\n      uses = '';\n      inProgressCount += 1;\n      observeIfDone();\n    };\n    // The load event fires when all resources have finished loading, which allows detecting whether SVG use elements are empty.\n    window.addEventListener('load', function winLoad() {\n      window.removeEventListener('load', winLoad, false); // To prevent memory leaks.\n      tid = setTimeout(checkUseElems, 0);\n    }, false);\n  }\n}());\n\nexport {};\n"],"names":["cache","checkUseElems","tid","debouncedCheck","unobserveChanges","observeChanges","observer","createRequest","url","getOrigin","loc","a","Request","origin","origin2","xlinkNS","base","bcr","hash","href","inProgressCount","isHidden","uses","xhr","observeIfDone","attrUpdateFunc","spec","onloadFunc","body","x","svg","onErrorTimeout","winLoad"],"mappings":"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"}